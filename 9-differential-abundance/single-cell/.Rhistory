stat_compare_means(aes(group = condition),
method = "t.test", # Choose the appropriate test
label = "p.signif",
label.x.npc = "center",
label.y.npc = "top",
hide.ns = TRUE,
vjust = 1.5)
dev.off()
df <- assay(obj.filter.ratio.multi[["h4.ac.ratio"]][,obj.filter.ratio.multi$multiplier == 100], "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "sample",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio.multi)), by.x = "sample", by.y = "row.names")
# facet labels
names <- c("Unmodified", "Mono-Acetylation", "Di-Acetylation", "Tri-Acetylation", "Tetra-Acetylation")
codes <- c("0-ac", "Mono-ac", "Di-ac", "Tri-ac", "Tetra-ac")
facet_labels <- setNames(names, codes)
pdf("nabut_vs_control_h4.ac_boxplot.pdf",
width = 4,
height = 5)
ggplot(df, aes(x = condition,  y = value, fill = condition)) +
geom_violin(scale = "width") +
geom_boxplot(width = 0.2, fill = "white") +
theme_Publication() +
labs(y = "PTM Relative abundance") +
scale_fill_manual(name = "Condition",
labels = c("Control", "Treat"),
values = c("#317ec2" ,"#c03830")) +
facet_wrap(. ~ ptm, scales = "free_y", nrow = 3,
labeller = labeller(ptm = as_labeller(facet_labels))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.text = element_text(size = 9)) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
stat_compare_means(aes(group = condition),
method = "t.test", # Choose the appropriate test
label = "p.signif",
label.x.npc = "center",
label.y.npc = "top",
hide.ns = TRUE,
vjust = 1.5)
dev.off()
df <- assay(obj.filter.ratio.multi[["h4.ac.ratio"]][,obj.filter.ratio.multi$multiplier == 100], "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "sample",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio.multi)), by.x = "sample", by.y = "row.names")
# facet labels
names <- c("Unmodified", "Mono-Acetylation", "Di-Acetylation", "Tri-Acetylation", "Tetra-Acetylation")
codes <- c("0-ac", "Mono-ac", "Di-ac", "Tri-ac", "Tetra-ac")
facet_labels <- setNames(names, codes)
pdf("nabut_vs_control_h4.ac_boxplot.pdf",
width = 4,
height = 5)
ggplot(df, aes(x = condition,  y = value, fill = condition)) +
geom_boxplot() +
geom_point() +
theme_Publication() +
labs(y = "PTM Relative abundance") +
scale_fill_manual(name = "Condition",
labels = c("Control", "Treat"),
values = c("#317ec2" ,"#c03830")) +
facet_wrap(. ~ ptm, scales = "free_y", nrow = 3,
labeller = labeller(ptm = as_labeller(facet_labels))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.text = element_text(size = 9)) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
stat_compare_means(aes(group = condition),
method = "t.test", # Choose the appropriate test
label = "p.signif",
label.x.npc = "center",
label.y.npc = "top",
hide.ns = TRUE,
vjust = 1.5)
dev.off()
df <- assay(obj.filter.ratio.multi[["h4.ac.ratio"]][,obj.filter.ratio.multi$multiplier == 100], "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "sample",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio.multi)), by.x = "sample", by.y = "row.names")
# facet labels
names <- c("Unmodified", "Mono-Acetylation", "Di-Acetylation", "Tri-Acetylation", "Tetra-Acetylation")
codes <- c("0-ac", "Mono-ac", "Di-ac", "Tri-ac", "Tetra-ac")
facet_labels <- setNames(names, codes)
pdf("nabut_vs_control_h4.ac_boxplot.pdf",
width = 4,
height = 5)
ggplot(df, aes(x = condition,  y = value, fill = condition)) +
geom_boxplot() +
geom_jitter() +
theme_Publication() +
labs(y = "PTM Relative abundance") +
scale_fill_manual(name = "Condition",
labels = c("Control", "Treat"),
values = c("#317ec2" ,"#c03830")) +
facet_wrap(. ~ ptm, scales = "free_y", nrow = 3,
labeller = labeller(ptm = as_labeller(facet_labels))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.text = element_text(size = 9)) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
stat_compare_means(aes(group = condition),
method = "t.test", # Choose the appropriate test
label = "p.signif",
label.x.npc = "center",
label.y.npc = "top",
hide.ns = TRUE,
vjust = 1.5)
dev.off()
df <- assay(obj.filter.ratio.multi[["global.ratio"]][,obj.filter.ratio.multi$multiplier == 100], "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "sample",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio.multi)), by.x = "sample", by.y = "row.names")
# facet labels
names <- c("Acetylation", "Mono-Methylation", "Di-Methylation", "Tri-Methylation")
codes <- c("ac", "me", "me2", "me3")
facet_labels <- setNames(names, codes)
pdf("nabut_vs_control_global-ptm_boxplot.pdf",
width = 5,
height = 5)
ggplot(df, aes(x = condition.predict,  y = value, fill = condition.predict)) +
geom_boxplot() +
theme_Publication() +
labs(y = "PTM Relative abundance") +
scale_fill_manual(name = "Condition",
labels = c("Control", "Treat"),
values = c("#317ec2" ,"#c03830")) +
facet_wrap(. ~ ptm, scales = "free_y", nrow = 2,
labeller = labeller(ptm = as_labeller(facet_labels))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
stat_compare_means(aes(group = condition.predict),
method = "t.test", # Choose the appropriate test
label = "p.signif",
label.x.npc = "center",
label.y.npc = "top",
hide.ns = TRUE,
vjust = 1.5)
dev.off()
df <- assay(obj.filter.ratio.multi[["h4.ac.ratio"]][,obj.filter.ratio.multi$multiplier == 100], "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "sample",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio.multi)), by.x = "sample", by.y = "row.names")
# facet labels
names <- c("Unmodified", "Mono-Acetylation", "Di-Acetylation", "Tri-Acetylation", "Tetra-Acetylation")
codes <- c("0-ac", "Mono-ac", "Di-ac", "Tri-ac", "Tetra-ac")
facet_labels <- setNames(names, codes)
pdf("nabut_vs_control_h4.ac_boxplot.pdf",
width = 4,
height = 5)
ggplot(df, aes(x = condition,  y = value, fill = condition)) +
geom_boxplot() +
theme_Publication() +
labs(y = "PTM Relative abundance") +
scale_fill_manual(name = "Condition",
labels = c("Control", "Treat"),
values = c("#317ec2" ,"#c03830")) +
facet_wrap(. ~ ptm, scales = "free_y", nrow = 3,
labeller = labeller(ptm = as_labeller(facet_labels))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.text = element_text(size = 9)) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
stat_compare_means(aes(group = condition),
method = "t.test", # Choose the appropriate test
label = "p.signif",
label.x.npc = "center",
label.y.npc = "top",
hide.ns = TRUE,
vjust = 1.5)
dev.off()
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/single-cell")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/single-cell")
# add predicted cell labels
obj.filter.ratio.multi[["ptm.ratio"]]$condition.predict <- obj.filter.ratio.multi$condition.predict
res.sc <- differential_abundance(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1],
assay = "MS1.ratio.log1p.batchCorrect",
test_type = "wilcox.test",
group_column = "condition.predict",
group1 = "control",
group2 = "treat")
write.csv(res.sc, "nabut_vs_control_sc.csv")
# volcano
# res$volcano.label <- ""
# res$volcano.score <- abs(res$log2fc) * -log10(res$p.value)
# res <- res[order(res$volcano.score, decreasing = TRUE),]
# res$volcano.label[1:20] <- res$ptm[1:20]
# res$direction <- ifelse(res$log2fc > 0, "up", "down")
pdf("nabut_vs_control_volcano_sc.pdf",
height = 6,
width = 6)
EnhancedVolcano(res.sc,
lab = rownames(res.sc),
title = NULL,
subtitle = NULL,
caption = NULL,
x = 'log2FC',
y = 'p.value',
pCutoffCol = "p.adj",
pointSize = 4.0,
colAlpha = 0.75,
legendPosition = "none",
FCcutoff = 0.5,
pCutoff = 0.05,
labSize = 3,
labCol = 'black',
labFace = 'bold',
boxedLabels = FALSE,
drawConnectors = FALSE,
widthConnectors = 1.0,
colConnectors = 'black',
arrowheads = FALSE,
max.overlaps = Inf,
gridlines.major	= FALSE,
gridlines.minor = FALSE,
ylim = c(0, 15),
xlim = c(-1, 3))
dev.off()
# heatmap sig hits
ptm.ratio.sig <- assay(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1], "MS1.ratio.log1p.batchCorrect")[rownames(res.sc[res.sc$p.adj < 0.05,]),]
column_ha = HeatmapAnnotation(Replicate = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]$replicate.unique,
Condition = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]$condition.predict,
col = list(Condition = c("control" = "#317ec2",
"treat" = "#c03830"),
Replicate = c("1" = brewer.pal(5, "Greens")[1],
"2" = brewer.pal(5, "Greens")[2],
"3" = brewer.pal(5, "Greens")[3],
"4" = brewer.pal(5, "Greens")[4],
"5" = brewer.pal(5, "Greens")[5]
)
)
)
histone_proteins <- sub("^([^-]+)-.*$", "\\1", rownames(ptm.ratio.sig))
pdf("nabut_vs_control_sig-heatmap_sc.pdf",
width = 8,
height = 8)
Heatmap(t(scale(t(ptm.ratio.sig))),
top_annotation = column_ha,
column_title = NULL,
heatmap_legend_param = list(title = "Z-score"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
column_split = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]$condition.predict,
split = histone_proteins,
cluster_column_slices = FALSE,
cluster_row_slices = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
res.sc
rowData(obj.filter.ratio.multi[["ptm.ratio"]])
rowData(obj.filter.ratio.multi[["ptm.ratio"]])$PTM.Name.Readable
rownames(res.sc) <- rowData(obj.filter.ratio.multi[["ptm.ratio"]])$PTM.Name.Readable[match(rownames(res.sc), rownames(rowData(obj.filter.ratio.multi[["ptm.ratio"]]))]
rownames(res.sc) <- rowData(obj.filter.ratio.multi[["ptm.ratio"]])$PTM.Name.Readable[match(rownames(res.sc), rownames(rowData(obj.filter.ratio.multi[["ptm.ratio"]])))]
res.sc$PTM.Name.Readable <- rowData(obj.filter.ratio.multi[["ptm.ratio"]])$PTM.Name.Readable[match(rownames(res.sc), rownames(rowData(obj.filter.ratio.multi[["ptm.ratio"]])))]
res.sc
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/bulk")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/bulk")
res <- differential_abundance(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100],
assay = "MS1.ratio.log1p.batchCorrect",
test_type = "t.test",
group_column = "condition",
group1 = "control",
group2 = "treat")
res.sc$PTM.Name.Readable <- rowData(obj.filter.ratio.multi[["ptm.ratio"]])$PTM.Name.Readable[match(rownames(res.sc), rownames(rowData(obj.filter.ratio.multi[["ptm.ratio"]])))]
write.csv(res, "nabut_vs_control_bulk.csv")
# volcano
# res$volcano.label <- ""
# res$volcano.score <- abs(res$log2fc) * -log10(res$p.value)
# res <- res[order(res$volcano.score, decreasing = TRUE),]
# res$volcano.label[1:20] <- res$ptm[1:20]
# res$direction <- ifelse(res$log2fc > 0, "up", "down")
pdf("nabut_vs_control_volcano_bulk.pdf",
height = 6,
width = 6)
EnhancedVolcano(res,
lab = rownames(res),
title = NULL,
subtitle = NULL,
caption = NULL,
x = 'log2FC',
y = 'p.value',
pCutoffCol = "p.adj",
pointSize = 4.0,
colAlpha = 0.75,
legendPosition = "none",
FCcutoff = 0.5,
pCutoff = 0.05,
labSize = 3,
labCol = 'black',
labFace = 'bold',
boxedLabels = FALSE,
drawConnectors = FALSE,
widthConnectors = 1.0,
colConnectors = 'black',
arrowheads = FALSE,
max.overlaps = Inf,
gridlines.major	= FALSE,
gridlines.minor = FALSE,
ylim = c(0, 5),
xlim = c(-2, 4))
dev.off()
# heatmap sig hits
ptm.ratio.sig <- assay(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100], "MS1.ratio.log1p.batchCorrect")[rownames(res[res$p.adj < 0.05,]),]
column_ha = HeatmapAnnotation(Replicate = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100]$replicate.unique,
Condition = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100]$condition,
col = list(Condition = c("control" = "#317ec2",
"treat" = "#c03830"),
Replicate = c("1" = brewer.pal(5, "Greens")[1],
"2" = brewer.pal(5, "Greens")[2],
"3" = brewer.pal(5, "Greens")[3],
"4" = brewer.pal(5, "Greens")[4],
"5" = brewer.pal(5, "Greens")[5]
)
)
)
histone_proteins <- sub("^([^-]+)-.*$", "\\1", rownames(ptm.ratio.sig))
pdf("nabut_vs_control_sig-heatmap_bulk.pdf",
width = 6,
height = 5)
Heatmap(t(scale(t(ptm.ratio.sig))),
top_annotation = column_ha,
column_title = NULL,
heatmap_legend_param = list(title = "Z-score"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
column_split = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100]$condition,
split = histone_proteins,
cluster_column_slices = FALSE,
cluster_row_slices = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/bulk")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/bulk")
res <- differential_abundance(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100],
assay = "MS1.ratio.log1p.batchCorrect",
test_type = "t.test",
group_column = "condition",
group1 = "control",
group2 = "treat")
res.sc$PTM.Name.Readable <- rowData(obj.filter.ratio.multi[["ptm.ratio"]])$PTM.Name.Readable[match(rownames(res.sc), rownames(rowData(obj.filter.ratio.multi[["ptm.ratio"]])))]
write.csv(res, "nabut_vs_control_bulk.csv")
# volcano
# res$volcano.label <- ""
# res$volcano.score <- abs(res$log2fc) * -log10(res$p.value)
# res <- res[order(res$volcano.score, decreasing = TRUE),]
# res$volcano.label[1:20] <- res$ptm[1:20]
# res$direction <- ifelse(res$log2fc > 0, "up", "down")
pdf("nabut_vs_control_volcano_bulk.pdf",
height = 6,
width = 6)
EnhancedVolcano(res,
lab = res.sc$PTM.Name.Readable,
title = NULL,
subtitle = NULL,
caption = NULL,
x = 'log2FC',
y = 'p.value',
pCutoffCol = "p.adj",
pointSize = 4.0,
colAlpha = 0.75,
legendPosition = "none",
FCcutoff = 0.5,
pCutoff = 0.05,
labSize = 3,
labCol = 'black',
labFace = 'bold',
boxedLabels = FALSE,
drawConnectors = FALSE,
widthConnectors = 1.0,
colConnectors = 'black',
arrowheads = FALSE,
max.overlaps = Inf,
gridlines.major	= FALSE,
gridlines.minor = FALSE,
ylim = c(0, 5),
xlim = c(-2, 4))
dev.off()
# heatmap sig hits
ptm.ratio.sig <- assay(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100], "MS1.ratio.log1p.batchCorrect")[rownames(res[res$p.adj < 0.05,]),]
column_ha = HeatmapAnnotation(Replicate = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100]$replicate.unique,
Condition = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100]$condition,
col = list(Condition = c("control" = "#317ec2",
"treat" = "#c03830"),
Replicate = c("1" = brewer.pal(5, "Greens")[1],
"2" = brewer.pal(5, "Greens")[2],
"3" = brewer.pal(5, "Greens")[3],
"4" = brewer.pal(5, "Greens")[4],
"5" = brewer.pal(5, "Greens")[5]
)
)
)
histone_proteins <- sub("^([^-]+)-.*$", "\\1", rownames(ptm.ratio.sig))
pdf("nabut_vs_control_sig-heatmap_bulk.pdf",
width = 6,
height = 5)
Heatmap(t(scale(t(ptm.ratio.sig))),
top_annotation = column_ha,
column_title = NULL,
heatmap_legend_param = list(title = "Z-score"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
column_split = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 100]$condition,
split = histone_proteins,
cluster_column_slices = FALSE,
cluster_row_slices = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/single-cell")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/8-differential-abundance/auto+nabut/single-cell")
# add predicted cell labels
obj.filter.ratio.multi[["ptm.ratio"]]$condition.predict <- obj.filter.ratio.multi$condition.predict
res.sc <- differential_abundance(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1],
assay = "MS1.ratio.log1p.batchCorrect",
test_type = "wilcox.test",
group_column = "condition.predict",
group1 = "control",
group2 = "treat")
res.sc$PTM.Name.Readable <- rowData(obj.filter.ratio.multi[["ptm.ratio"]])$PTM.Name.Readable[match(rownames(res.sc), rownames(rowData(obj.filter.ratio.multi[["ptm.ratio"]])))]
write.csv(res.sc, "nabut_vs_control_sc.csv")
# volcano
# res$volcano.label <- ""
# res$volcano.score <- abs(res$log2fc) * -log10(res$p.value)
# res <- res[order(res$volcano.score, decreasing = TRUE),]
# res$volcano.label[1:20] <- res$ptm[1:20]
# res$direction <- ifelse(res$log2fc > 0, "up", "down")
pdf("nabut_vs_control_volcano_sc.pdf",
height = 6,
width = 6)
EnhancedVolcano(res.sc,
lab = res.sc$PTM.Name.Readable,
title = NULL,
subtitle = NULL,
caption = NULL,
x = 'log2FC',
y = 'p.value',
pCutoffCol = "p.adj",
pointSize = 4.0,
colAlpha = 0.75,
legendPosition = "none",
FCcutoff = 0.5,
pCutoff = 0.05,
labSize = 3,
labCol = 'black',
labFace = 'bold',
boxedLabels = FALSE,
drawConnectors = FALSE,
widthConnectors = 1.0,
colConnectors = 'black',
arrowheads = FALSE,
max.overlaps = Inf,
gridlines.major	= FALSE,
gridlines.minor = FALSE,
ylim = c(0, 15),
xlim = c(-1, 3))
dev.off()
# heatmap sig hits
ptm.ratio.sig <- assay(obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1], "MS1.ratio.log1p.batchCorrect")[rownames(res.sc[res.sc$p.adj < 0.05,]),]
column_ha = HeatmapAnnotation(Replicate = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]$replicate.unique,
Condition = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]$condition.predict,
col = list(Condition = c("control" = "#317ec2",
"treat" = "#c03830"),
Replicate = c("1" = brewer.pal(5, "Set1")[1],
"2" = brewer.pal(5, "Set1")[2],
"3" = brewer.pal(5, "Set1")[3],
"4" = brewer.pal(5, "Set1")[4],
"5" = brewer.pal(5, "Set1")[5]
)
)
)
histone_proteins <- sub("^([^-]+)-.*$", "\\1", rownames(ptm.ratio.sig))
pdf("nabut_vs_control_sig-heatmap_sc.pdf",
width = 8,
height = 8)
Heatmap(t(scale(t(ptm.ratio.sig))),
top_annotation = column_ha,
column_title = NULL,
heatmap_legend_param = list(title = "Z-score"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
column_split = obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]$condition.predict,
split = histone_proteins,
cluster_column_slices = FALSE,
cluster_row_slices = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
