dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter$replicate),
cell_number = as.factor(obj.filter$multiplier),
run_id = obj.filter$run_id)
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj.filter)$Precursor.Charge))
pdf("MS2.log2.combat_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(scale(assay(obj.filter, "MS2.log2.combat"), center = FALSE, scale = FALSE),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "Log2(MS2 area)"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
data <- assay(obj.filter, "MS2.log2.combat")
data[data == 0] <- NA
p <- pca(na.omit(data),
metadata = colData(obj.filter),
center = TRUE,
scale = TRUE)
screeplot(p)
pdf("MS2.log2.combat_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier", "total.ms2"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS2.log2.combat_replicate_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "# Cells") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
# Chunk 44
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto")
saveRDS(obj.filter, "obj.filter.RDS")
# Chunk 45
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/tables")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/tables")
write.csv(assay(obj.filter, "MS1.log2.combat"), "MS1.log2.combat.csv")
# Chunk 46
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
# assess batch effects
# batchQC(assay(obj.filter, "MS1.log2.center"), obj.filter$replicate, NULL,
#         report_file="MS1.log2.center.no-correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# correct batch using combat
# keeping the number of cells and condition be variables of interest
pdata <- data.frame(colnames(obj.filter), obj.filter$replicate, obj.filter$multiplier)
modmatrix = model.matrix(~as.integer(obj.filter$multiplier), data=pdata)
assays(obj.filter, withDimnames=FALSE)[["MS1.log2.center.combat"]] <- as.data.frame(ComBat(dat = assay(obj.filter, "MS1.log2.center"),
batch = obj.filter$replicate,
mod = modmatrix,
ref.batch = 1))
# assess correction
# batchQC(assay(obj.filter, "MS1.log2.center.combat"), obj.filter$replicate, as.integer(obj.filter$condition),
#         report_file="MS1.log2.center.correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# heatmap
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter$replicate),
cell_number = as.factor(obj.filter$multiplier))
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj.filter)$Precursor.Charge))
pdf("MS1.log2.center.combat_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(scale(assay(obj.filter, "MS1.log2.center.combat"), center = FALSE, scale = FALSE),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "Log2(MS2 area)"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
p <- pca(na.omit(assay(obj.filter, "MS1.log2.center.combat")),
metadata = colData(obj.filter),
center = TRUE,
scale = TRUE)
screeplot(p)
pdf("MS1.log2.center.combat_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS1.log2.center.combat_replicate_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "# Cells") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
# Chunk 47
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
# assess batch effects
# batchQC(assay(obj.filter, "MS2.log2.center"), obj.filter$replicate, NULL,
#         report_file="MS2.log2.center.no-correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# correct batch using combat
# keeping the number of cells and condition be variables of interest
pdata <- data.frame(colnames(obj.filter), obj.filter$replicate, obj.filter$multiplier)
modmatrix = model.matrix(~as.integer(obj.filter$multiplier), data=pdata)
assays(obj.filter, withDimnames=FALSE)[["MS2.log2.center.combat"]] <- as.data.frame(ComBat(dat = assay(obj.filter, "MS2.log2.center"),
batch = obj.filter$replicate,
mod = modmatrix,
ref.batch = 1))
# assess correction
# batchQC(assay(obj.filter, "MS2.log2.center.combat"), obj.filter$replicate, as.integer(obj.filter$condition),
#         report_file="MS2.log2.center.correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# heatmap
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter$replicate),
cell_number = as.factor(obj.filter$multiplier))
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj.filter)$Precursor.Charge))
pdf("MS2.log2.center.combat_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(scale(assay(obj.filter, "MS2.log2.center.combat"), center = FALSE, scale = FALSE),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "Log2(MS2 area)"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
p <- pca(na.omit(assay(obj.filter, "MS2.log2.center.combat")),
metadata = colData(obj.filter),
center = TRUE,
scale = TRUE)
screeplot(p)
pdf("MS2.log2.center.combat_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS2.log2.center.combat_replicate_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "# Cells") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
# Chunk 48
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto")
saveRDS(obj.filter, "obj.filter.RDS")
# Chunk 49
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/tables")
write.csv(assay(obj.filter, "MS1.log2.center.combat"), "MS1.log2.center.combat.csv")
# Chunk 50
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
# assess batch effects
# batchQC(assay(obj.filter.ratio, "MS1.ratio"), obj.filter.ratio$replicate, NULL,
#         report_file="MS1.ratio.no-correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# correct batch using combat
# have different cell numbers be condition
pdata <- data.frame(colnames(obj.filter.ratio), obj.filter.ratio$replicate, obj.filter.ratio$multiplier)
modmatrix = model.matrix(~as.integer(obj.filter.ratio$multiplier), data=pdata)
assays(obj.filter.ratio.multi[["ptm.ratio"]], withDimnames=FALSE)[["MS1.ratio.batchCorrect"]] <- as.data.frame(ComBat(dat = assay(obj.filter.ratio, "MS1.ratio"),
batch = obj.filter.ratio$replicate,
mod = modmatrix,
ref.batch = 1))
# assess correction
# batchQC(assay(obj.filter.ratio, "MS1.ratio.combat"), obj.filter.ratio$replicate, NULL,
#         report_file="MS1.ratio.correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# heatmap
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
run_id = obj.filter.ratio.multi$run_id,
cell_number = as.factor(obj.filter.ratio.multi$multiplier))
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj.filter.ratio.multi[["ptm.ratio"]])$Precursor.Charge))
pdf("MS1.ratio.combat_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.batchCorrect"),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "MS1 peptide ratio"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
p <- pca(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.batchCorrect"),
metadata = colData(obj.filter.ratio),
center = TRUE,
scale = TRUE)
pdf("MS1.ratio_screeplot.pdf",
width = 5,
height = 5)
screeplot(p,
components = getComponents(p)[1:10])
dev.off()
screeplot(p)
pdf("MS1.ratio.combat_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier", "total.ms1"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS1.ratio.combat_replicate_pca.pdf",
width = 4,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "# Cells") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
pdf("MS1.ratio.combat_replicate_pca_pair.pdf",
width = 8,
height = 8)
pairsplot(p,
colby = "replicate",
shape = "multiplier",
hline = 0,
vline = 0,
lab = NULL)
dev.off()
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "# Cells") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
# Chunk 51
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batchqc")
# assess batch effects
# batchQC(assay(obj.filter.ratio, "MS2.ratio"), obj.filter.ratio$replicate, NULL,
#         report_file="MS2.ratio.no-correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# correct batch using combat
# have different cell numbers be condition
pdata <- data.frame(colnames(obj.filter.ratio), obj.filter.ratio$replicate, obj.filter.ratio$multiplier)
modmatrix = model.matrix(~as.integer(obj.filter.ratio$multiplier), data=pdata)
assays(obj.filter.ratio.multi[["ptm.ratio"]], withDimnames=FALSE)[["MS2.ratio.batchCorrect"]] <- as.data.frame(ComBat(dat = assay(obj.filter.ratio, "MS2.ratio"),
batch = obj.filter.ratio$replicate,
mod = modmatrix,
ref.batch = 1))
# assess correction
# batchQC(assay(obj.filter.ratio, "MS2.ratio.combat"), obj.filter.ratio$replicate, NULL,
#         report_file="MS2.ratio.correction.html", report_dir=".",
#         report_option_binary="111111111",
#         view_report=FALSE, interactive=FALSE, batchqc_output=FALSE)
# heatmap
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
run_id = obj.filter.ratio.multi$run_id,
cell_number = as.factor(obj.filter.ratio.multi$multiplier))
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj.filter.ratio.multi[["ptm.ratio"]])$Precursor.Charge))
pdf("MS2.ratio.combat_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS2.ratio.batchCorrect"),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "MS2 peptide ratio"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
p <- pca(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS2.ratio.batchCorrect"),
metadata = colData(obj.filter.ratio),
center = TRUE,
scale = TRUE)
pdf("MS2.ratio_screeplot.pdf",
width = 5,
height = 5)
screeplot(p,
components = getComponents(p)[1:10])
dev.off()
screeplot(p)
pdf("MS2.ratio.combat_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier", "total.ms2"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS2.ratio.combat_replicate_pca.pdf",
width = 4,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "# Cells") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
pdf("MS2.ratio.combat_replicate_pca_pair.pdf",
width = 8,
height = 8)
pairsplot(p,
colby = "replicate",
shape = "multiplier",
hline = 0,
vline = 0,
lab = NULL)
dev.off()
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "# Cells") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
# Chunk 52
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
assays(obj.filter.ratio.multi[["sptm.ratio"]], withDimnames=FALSE)[["MS1.ratio.batchCorrect"]] <-
calculate_single_ptm_ratio(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.batchCorrect"), input = "wide")
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
experiment = obj.filter.ratio.multi$experiment,
condition = obj.filter.ratio.multi$condition,
cell_number = as.factor(obj.filter.ratio.multi$multiplier),
run_id = obj.filter.ratio.multi$run_id)
pdf("MS1.ratio.batchCorrect.single_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(assay(experiments(obj.filter.ratio.multi)[["sptm.ratio"]], "MS1.ratio.batchCorrect"),
top_annotation = column_ha,
heatmap_legend_param = list(title = "PTM relative abundance"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# Chunk 53
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
assays(obj.filter.ratio.multi[["global.ratio"]], withDimnames=FALSE)[["MS1.ratio.batchCorrect"]] <-
calculate_global_ptm_ratio(assay(obj.filter.ratio.multi[["sptm.ratio"]], "MS1.ratio.batchCorrect"))
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
experiment = obj.filter.ratio.multi$experiment,
cell_number = as.factor(obj.filter.ratio.multi$multiplier),
condition = obj.filter.ratio.multi$condition,
run_id = obj.filter.ratio.multi$run_id)
pdf("MS1.ratio.batchCorrect.global_heatmap.pdf",
width = 10,
height = 3)
set.seed(123)
Heatmap(assay(experiments(obj.filter.ratio.multi)[["global.ratio"]], "MS1.ratio.batchCorrect"),
top_annotation = column_ha,
heatmap_legend_param = list(title = "PTM relative abundance"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# Chunk 54
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/batch-corrected")
assays(obj.filter.ratio.multi[["h4.ac.ratio"]], withDimnames=FALSE)[["MS1.ratio.batchCorrect"]] <-
calculate_h4_ac_summary_ratio(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.batchCorrect"), input = "wide")
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
experiment = obj.filter.ratio.multi$experiment,
cell_number = as.factor(obj.filter.ratio.multi$multiplier),
condition = obj.filter.ratio.multi$condition,
run_id = obj.filter.ratio.multi$run_id)
pdf("MS1.ratio.batchCorrect.h4_heatmap.pdf",
width = 10,
height = 3)
set.seed(123)
Heatmap(assay(experiments(obj.filter.ratio.multi)[["h4.ac.ratio"]], "MS1.ratio.batchCorrect"),
top_annotation = column_ha,
heatmap_legend_param = list(title = "PTM relative abundance"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# Chunk 55
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto")
saveRDS(obj.filter.ratio.multi, "obj.filter.ratio.multi.RDS")
# Chunk 56
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/tables")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto/tables")
write.csv(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.batchCorrect"), "MS1.ratio.batchCorrect.csv")
write.csv(assay(obj.filter.ratio.multi[["sptm.ratio"]], "MS1.ratio.batchCorrect"), "MS1.ratio.single.batchCorrect.csv")
write.csv(assay(obj.filter.ratio.multi[["global.ratio"]], "MS1.ratio.batchCorrect"), "MS1.ratio.global.batchCorrect.csv")
write.csv(assay(obj.filter.ratio.multi[["h4.ac.ratio"]], "MS1.ratio.batchCorrect"), "MS1.ratio.h4.batchCorrect.csv")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto")
obj <- readRDS("obj.filter.RDS")
obj
