setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/unfiltered")
# transform
assays(obj)[["MS1.log2"]] <- log2(assay(obj, "MS1") + 1)
# plot by cell
df <- assay(obj, "MS1.log2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj)), by.x = "variable", by.y = "row.names")
pdf("MS1.log2_distribution_unflitered_cell.pdf",
width = 8,
height = 10)
ggplot(df, aes(x = as.factor(run_id), y = value, fill = as.factor(replicate))) +
geom_boxplot(width = 0.7) +
theme_Publication() +
labs(x = "Run", y = "Log2(MS1 intensity)", fill = "Batch") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
facet_wrap(.~as.factor(multiplier), scales = "free_x", nrow = 3) +
scale_fill_manual(values = brewer.pal(5, "Set1")[c(4:5)])
dev.off()
# plot by peptide
pdf("MS1.log2_distribution_unflitered_peptide.pdf",
width = 15,
height = 10)
ggplot(df, aes(x = id, y = value)) +
geom_boxplot() +
theme_Publication() +
labs(x = "Peptide", y = "Log2(MS1 intensity)", fill = "Replicate") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
facet_wrap(.~as.factor(multiplier), scales = "free_x")
dev.off()
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj$replicate),
cell_number = as.factor(obj$multiplier),
condition = as.factor(obj$condition))
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj)$Precursor.Charge))
pdf("MS1.log2_unflitered_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(scale(assay(obj, "MS1.log2"), center = FALSE, scale = FALSE),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "Log2(MS1 area)"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
p <- pca(na.omit(assay(obj, "MS1.log2")),
metadata = colData(obj),
center = TRUE,
scale = TRUE)
screeplot(p)
pdf("MS1.log2_unflitered_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier", "condition"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS1.log2_unflitered_replicate_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'right',
hline = 0,
vline = 0,
gridlines.major = FALSE,
gridlines.minor = FALSE,
lab = NULL) +
scale_shape_binned()
dev.off()
pdf("MS1.log2_unflitered_condition_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "condition",
shape = "multiplier",
legendPosition = 'right',
hline = 0,
vline = 0,
gridlines.major = FALSE,
gridlines.minor = FALSE,
lab = NULL) +
scale_shape_binned()
dev.off()
# Chunk 11
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/unfiltered")
# transform
assays(obj)[["MS2.log2"]] <- log2(assay(obj, "MS2") + 1)
# plot by cell
df <- assay(obj, "MS2.log2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj)), by.x = "variable", by.y = "row.names")
pdf("MS2.log2_distribution_unflitered_cell.pdf",
width = 8,
height = 10)
ggplot(df, aes(x = as.factor(run_id), y = value, fill = as.factor(replicate))) +
geom_boxplot(width = 0.7) +
theme_Publication() +
labs(title = "Cell #", x = "Run", y = "Log2(MS2 intensity)", fill = "Replicate") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
facet_wrap(.~as.factor(multiplier), scales = "free_x", nrow = 3)
dev.off()
# plot by peptide
pdf("MS2.log2_distribution_unflitered_peptide.pdf",
width = 15,
height = 10)
ggplot(df, aes(x = id, y = value)) +
geom_boxplot() +
theme_Publication() +
labs(title = "Cell #", x = "Peptide", y = "Log2(MS2 intensity)", fill = "Replicate") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
facet_wrap(.~as.factor(multiplier), scales = "free_x")
dev.off()
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj$replicate),
cell_number = as.factor(obj$multiplier),
condition = as.factor(obj$condition))
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj)$Precursor.Charge))
pdf("MS2.log2_unflitered_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(scale(assay(obj, "MS2.log2"), center = FALSE, scale = FALSE),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "Log2(MS2 area)"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
data <- assay(obj, "MS2.log2")
data[data == 0] <- NA
p <- pca(na.omit(data),
metadata = colData(obj),
center = TRUE,
scale = TRUE)
screeplot(p)
pdf("MS2.log2_unflitered_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier", "condition"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS2.log2_unflitered_replicate_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'right',
hline = 0,
vline = 0,
gridlines.major = FALSE,
gridlines.minor = FALSE,
lab = NULL) +
scale_shape_binned()
dev.off()
pdf("MS2.log2_unflitered_condition_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "condition",
shape = "multiplier",
legendPosition = 'right',
hline = 0,
vline = 0,
gridlines.major = FALSE,
gridlines.minor = FALSE,
lab = NULL) +
scale_shape_binned()
dev.off()
# Chunk 12
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/unfiltered")
# by standards
df.1 <- assay(obj, "MS1.log2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value")
df.2 <- assay(obj, "MS2.log2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value")
df <- cbind(df.1, df.2$value)
colnames(df) <- c("id", "variable", "ms1", "ms2")
df <- merge(df, as.data.frame(colData(obj)), by.x = "variable", by.y = "row.names")
df$id <- gsub(";", " ", df$id)
# by cell amount
pdf("MS1_vs_MS2_unflitered_type.pdf",
width = 8,
height = 8)
ggplot(subset(df, multiplier != "0"), aes(x = ms1, y = ms2, color = as.factor(replicate))) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
facet_wrap(.~as.factor(multiplier)) +
labs(title = "", x = "Log2(MS1)", y = "Log2(MS2)") +
theme_Publication() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_color_discrete(name = "Replicate")
dev.off()
# by peptide for single cells
pdf("MS1_vs_MS2_unflitered_peptide.pdf",
width = 25,
height = 25)
ggplot(subset(df, multiplier == "1"), aes(x = ms1, y = ms2, color = as.factor(replicate))) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
facet_wrap(.~as.factor(multiplier)) +
labs(title = "HIstone Peptides", x = "Log2(MS1)", y = "Log2(MS2)") +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_color_discrete(name = "Replicate")
dev.off()
# Chunk 13
# plot single cells vs blanks
df <- assay(obj, "MS1") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj)), by.x = "variable", by.y = "row.names") %>%
subset(multiplier %in% c(0, 1))
df$id <- gsub(";", " ", df$id)
# summarize
df %>%
group_by(multiplier) %>%
summarize(mean = mean(value))
pdf("MS1_0cell_vs_1cell_peptide_all.pdf",
width = 20,
height = 20)
ggplot(df, aes(x = as.factor(multiplier), y = value, fill = as.factor(multiplier))) +
geom_boxplot() +
geom_jitter(alpha = 0.5) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS1 Intensity") +
facet_wrap(~id, scales = "free_y", labeller = labeller(id = label_wrap_gen(20))) +
theme(legend.position = "none")
dev.off()
pdf("MS1_0cell_vs_1cell_peptide_replicate.pdf",
width = 20,
height = 20)
ggplot(df, aes(x = as.factor(multiplier), y = value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(alpha = 0.75, aes(color = as.factor(replicate))) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS1 Intensity", color = "Replicate") +
facet_wrap(~id, scales = "free_y", labeller = labeller(id = label_wrap_gen(20)))
dev.off()
pdf("MS1_0cell_vs_1cell_all.pdf",
width = 3,
height = 3)
ggplot(df, aes(x = value, fill = as.factor(multiplier))) +
geom_density(alpha = 0.5) +
scale_x_log10() +
theme_Publication(base_size = 12) +
labs(title = "", x = "MS1 Intensity", y = "Density", fill = "Cell #")
dev.off()
pdf("MS1_0cell_vs_1cell_replicate.pdf",
width = 5,
height = 3)
ggplot(df, aes(x = value, fill = as.factor(multiplier))) +
geom_density(alpha = 0.5) +
scale_x_log10() +
theme_Publication(base_size = 12) +
labs(title = "", x = "MS1 Intensity", y = "Density", fill = "Cell #") +
facet_wrap(~replicate, nrow = 1)
dev.off()
# Chunk 14
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/filtered")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/filtered")
obj.peptide_filter <- filter_missing_peptides(obj, threshold = 0.5)
saveRDS(obj.peptide_filter, "obj.peptide_filter.RDS")
# Chunk 15
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/filtered")
obj.background_filter <- filter_background_peptides(obj.peptide_filter, ratio = 1)
saveRDS(obj.background_filter, "obj.background_filter.RDS")
# Chunk 16
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/filtered")
# plot single cells vs blanks
df <- assay(obj.background_filter, "MS1") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.background_filter)), by.x = "variable", by.y = "row.names") %>%
subset(multiplier %in% c(0, 1))
df$id <- gsub(";", " ", df$id)
# peptides separate
# replicates merged
pdf("MS1_0cell_vs_1cell_peptide_all.pdf",
width = 20,
height = 20)
ggplot(df, aes(x = as.factor(multiplier), y = value, fill = as.factor(multiplier))) +
geom_boxplot() +
geom_jitter(alpha = 0.5) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS1 Intensity") +
facet_wrap(~id, scales = "free_y", labeller = labeller(id = label_wrap_gen(20))) +
theme(legend.position = "none")
dev.off()
# replicates separated
pdf("MS1_0cell_vs_1cell_peptide_replicate.pdf",
width = 20,
height = 20)
ggplot(df, aes(x = as.factor(multiplier), y = value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(alpha = 0.75, aes(color = as.factor(replicate))) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS1 Intensity", color = "Replicate") +
facet_wrap(~id, scales = "free_y", labeller = labeller(id = label_wrap_gen(20)))
dev.off()
# all peptides
# replicates merged
pdf("MS1.log2_0cell_vs_1cell_all.pdf",
width = 3,
height = 3)
ggplot(df, aes(x = value, fill = as.factor(multiplier))) +
geom_density(alpha = 0.5) +
scale_x_log10() +
theme_Publication(base_size = 12) +
labs(title = "", x = "Log2(MS1 intensity)", y = "Density", fill = "Cell #")
dev.off()
# replicates separated
pdf("MS1.log2_0cell_vs_1cell_replicate.pdf",
width = 5,
height = 3)
ggplot(df, aes(x = value, fill = as.factor(multiplier))) +
geom_density(alpha = 0.5) +
scale_x_log10() +
theme_Publication(base_size = 12) +
labs(title = "", x = "Log2(MS1 intensity)", y = "Density", fill = "Cell #") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~replicate, nrow = 1)
dev.off()
# Chunk 17
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/auto+nabut/filtered")
# plot single cells vs blanks
df <- assay(obj.background_filter, "MS2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.background_filter)), by.x = "variable", by.y = "row.names") %>%
subset(multiplier %in% c(0, 1))
df$id <- gsub(";", " ", df$id)
# peptides separate
# replicates merged
pdf("MS2_0cell_vs_1cell_peptide_all.pdf",
width = 20,
height = 20)
ggplot(df, aes(x = as.factor(multiplier), y = value, fill = as.factor(multiplier))) +
geom_boxplot() +
geom_jitter(alpha = 0.5) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS2 Intensity") +
facet_wrap(~id, scales = "free_y", labeller = labeller(id = label_wrap_gen(20))) +
theme(legend.position = "none")
dev.off()
# replicates separated
pdf("MS2_0cell_vs_1cell_peptide_replicate.pdf",
width = 20,
height = 20)
ggplot(df, aes(x = as.factor(multiplier), y = value)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(alpha = 0.75, aes(color = as.factor(replicate))) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS2 Intensity", color = "Replicate") +
facet_wrap(~id, scales = "free_y", labeller = labeller(id = label_wrap_gen(20)))
dev.off()
# all peptides
# replicates merged
pdf("MS2.log2_0cell_vs_1cell_all.pdf",
width = 3,
height = 3)
ggplot(df, aes(x = value, fill = as.factor(multiplier))) +
geom_density(alpha = 0.5) +
scale_x_log10() +
theme_Publication(base_size = 12) +
labs(title = "", x = "Log2(MS2 intensity)", y = "Density", fill = "Cell #")
dev.off()
# replicates separated
pdf("MS2.log2_0cell_vs_1cell_replicate.pdf",
width = 5,
height = 3)
ggplot(df, aes(x = value, fill = as.factor(multiplier))) +
geom_density(alpha = 0.5) +
scale_x_log10() +
theme_Publication(base_size = 12) +
labs(title = "", x = "Log2(MS2 intensity)", y = "Density", fill = "Cell #") +
facet_wrap(~replicate, nrow = 1) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
dev.off()
# Chunk 18
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/3-calibration-curves/auto/cells/unfiltered")
quant_filter <- read.csv("MS1_calibration_curve_correlations.csv")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/filtered")
obj.quant_filter <- filter_non_linear_peptides(quant_filter, obj.background_filter, correlation = 0.8, p_value = 0.05)
saveRDS(obj.quant_filter, "obj.quant_filter.RDS")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/4-normalization/nabut/filtered")
# filter out 2, 4, 8 cells
obj.background_filter <- obj.background_filter[,obj.background_filter$multiplier == 0 |
obj.background_filter$multiplier == 1 |
obj.background_filter$multiplier == 100]
# set deviation so that it filters all empty samples
obj.cell_filter <- filter_samples(obj.background_filter, assay = "MS1", dev = 1, filter_low = TRUE, filter_high = FALSE)
# change coldata
obj.cell_filter$multiplier <- factor(obj.cell_filter$multiplier)
background_filter_df <- as.data.frame(colData(obj.background_filter)) %>%
group_by(replicate, condition) %>%
summarise(count = n(), .groups = 'drop')
background_filter_df
as.data.frame(colData(obj.background_filter))
background_filter_df <- as.data.frame(colData(obj.background_filter)) %>%
group_by(replicate, condition) %>%
summarise(count = n(), .groups = 'drop') %>%
filter(condition != "")
background_filter_df
cell_filter_df <- as.data.frame(colData(obj.cell_filter)) %>%
group_by(replicate, condition) %>%
summarise(count = n(), .groups = 'drop') %>%
filter(condition != "")
cell_filter_df
background_filter_df$filtered <- background_filter_df$count - cell_filter_df$count
background_filter_df
df_long <- background_filter_df %>%
pivot_longer(cols = c(count, filtered),
names_to = "variable",
values_to = "value")
df_long
pdf("samples_filtered.pdf",
width = 5,
height = 5)
ggplot(df_long, aes(x = replicate, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "stack") +
facet_wrap(~ condition, scales = "free_x")
theme_Publication() +
labs(title = "Frequency of Multipliers by Replicate",
x = "Multiplier",
y = "Count")
dev.off()
pdf("samples_filtered.pdf",
width = 5,
height = 5)
ggplot(df_long, aes(x = replicate, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "stack") +
facet_wrap(~ condition, scales = "free_x") +
theme_Publication() +
labs(title = "Frequency of Multipliers by Replicate",
x = "Multiplier",
y = "Count")
dev.off()
pdf("samples_filtered.pdf",
width = 5,
height = 5)
ggplot(df_long, aes(x = replicate, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "stack") +
facet_wrap(~ condition, scales = "free_x") +
scale_x_discrete(labels = c("1" = "4", "2" = "5")) +
scale_fill_manual(values = c("count" = "skyblue", "filtered" = "darkblue"),
labels = c("count" = "Total", "filtered" = "Filtered"))+
theme_Publication() +
labs(title = "# Injections per condition",
x = "Batch",
y = "# Injections")
dev.off()
# set deviation so that it filters all empty samples
obj.cell_filter <- filter_samples(obj.background_filter, assay = "MS1", dev = 1, filter_low = TRUE, filter_high = FALSE)
