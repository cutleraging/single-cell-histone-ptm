assays(obj.filter.ratio.multi[["ptm.ratio"]], withDimnames=FALSE)[["MS2.ratio.log1p.batchCorrect"]] <-
removeBatchEffect(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS2.ratio.log1p"),
batch = obj.filter.ratio.multi$replicate)
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
cell_number = as.factor(obj.filter.ratio.multi$multiplier),
run_id = obj.filter.ratio.multi$run_id)
row_ha = rowAnnotation(charge = anno_barplot(rowData(obj.filter.ratio.multi[["ptm.ratio"]])$Precursor.Charge))
pdf("MS2.ratio.log1p.batchCorrect_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS2.ratio.log1p.batchCorrect"),
top_annotation = column_ha,
right_annotation = row_ha,
heatmap_legend_param = list(title = "Normalized Peptide Ratio"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# PCA
p <- pca(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS2.ratio.log1p.batchCorrect"),
metadata = colData(obj.filter.ratio.multi),
center = TRUE,
scale = TRUE)
pdf("MS2.ratio.log1p.batchCorrect_screeplot.pdf",
width = 5,
height = 5)
screeplot(p,
components = getComponents(p)[1:10])
dev.off()
pdf("MS2.ratio.log1p.batchCorrect_eigencor.pdf",
width = 5,
height = 5)
eigencorplot(p,
main = "Principle component correlations",
cexMain = 1.5,
metavars = c("replicate", "date", "run_id", "multiplier"),
col = viridis(100),
colCorval = 'firebrick',
fontCorval = 2,
cexCorval = 0.5,
rotLabX = 45,
posColKey = 'top')
dev.off()
pdf("MS2.ratio.log1p.batchCorrect_replicate_pca.pdf",
width = 5,
height = 5)
biplot(p,
colby = "replicate",
shape = "multiplier",
legendPosition = 'top',
hline = 0,
vline = 0,
lab = NULL) +
labs(color = "Replicate",
shape = "Multiplier") +
theme_Publication() +
theme(legend.box="vertical",
legend.margin=margin())
dev.off()
# Chunk 24
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/batch-corrected")
assays(obj.filter.ratio.multi[["sptm.ratio"]], withDimnames=FALSE)[["MS1.ratio.log1p.batchCorrect"]] <-
removeBatchEffect(assay(obj.filter.ratio.multi[["sptm.ratio"]], "MS1.ratio.log1p"),
batch = obj.filter.ratio.multi$replicate)
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
cell_number = as.factor(obj.filter.ratio.multi$multiplier),
run_id = obj.filter.ratio.multi$run_id)
pdf("MS1.ratio.log1p.batchCorrect.single_heatmap.pdf",
width = 10,
height = 10)
set.seed(123)
Heatmap(assay(experiments(obj.filter.ratio.multi)[["sptm.ratio"]], "MS1.ratio.log1p.batchCorrect"),
top_annotation = column_ha,
heatmap_legend_param = list(title = "PTM relative abundance"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# Chunk 25
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/batch-corrected")
assays(obj.filter.ratio.multi[["global.ratio"]], withDimnames=FALSE)[["MS1.ratio.log1p.batchCorrect"]] <-
removeBatchEffect(assay(obj.filter.ratio.multi[["global.ratio"]], "MS1.ratio.log1p"),
batch = obj.filter.ratio.multi$replicate)
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
cell_number = as.factor(obj.filter.ratio.multi$multiplier),
run_id = obj.filter.ratio.multi$run_id)
pdf("MS1.ratio.log1p.batchCorrect.global_heatmap.pdf",
width = 10,
height = 3)
set.seed(123)
Heatmap(assay(experiments(obj.filter.ratio.multi)[["global.ratio"]], "MS1.ratio.log1p.batchCorrect"),
top_annotation = column_ha,
heatmap_legend_param = list(title = "PTM relative abundance"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# Chunk 26
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/batch-corrected")
assays(obj.filter.ratio.multi[["h4.ac.ratio"]], withDimnames=FALSE)[["MS1.ratio.log1p.batchCorrect"]] <-
removeBatchEffect(assay(obj.filter.ratio.multi[["h4.ac.ratio"]], "MS1.ratio.log1p"),
batch = obj.filter.ratio.multi$replicate)
# heatmap
column_ha = HeatmapAnnotation(replicate = as.factor(obj.filter.ratio.multi$replicate),
cell_number = as.factor(obj.filter.ratio.multi$multiplier),
run_id = obj.filter.ratio.multi$run_id)
pdf("MS1.ratio.log1p.batchCorrect.h4_heatmap.pdf",
width = 10,
height = 3)
set.seed(123)
Heatmap(assay(experiments(obj.filter.ratio.multi)[["h4.ac.ratio"]], "MS1.ratio.log1p.batchCorrect"),
top_annotation = column_ha,
heatmap_legend_param = list(title = "PTM relative abundance"),
cluster_rows = TRUE,
cluster_columns = TRUE,
show_column_names = FALSE,
row_names_gp = gpar(fontsize = 10))
dev.off()
# Chunk 27
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto")
saveRDS(obj.filter.ratio.multi, "obj.filter.ratio.multi.RDS")
# Chunk 28
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/tables")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/tables")
write.csv(assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.log1p.batchCorrect"), "MS1.ratio.log1p.batchCorrect.csv")
write.csv(assay(obj.filter.ratio.multi[["sptm.ratio"]], "MS1.ratio.log1p.batchCorrect"), "MS1.ratio.log1p.batchCorrect.csv")
write.csv(assay(obj.filter.ratio.multi[["global.ratio"]], "MS1.ratio.log1p.batchCorrect"), "MS1.ratio.log1p.batchCorrect.csv")
write.csv(assay(obj.filter.ratio.multi[["h4.ac.ratio"]], "MS1.ratio.log1p.batchCorrect"), "MS1.ratio.log1p.batchCorrect.csv")
# Chunk 29
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/unnormalized")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/unnormalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# get CV for each ptm, replicate, standard amount
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(CV = sd(value, na.rm = TRUE)/mean(value, na.rm = TRUE))
write.csv(df.cv, "MS1_CV.csv", row.names = FALSE)
# plot by replicate, standard amount
pdf("MS1_CV_replicate.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_violin(scale = "width",
width = 0.75,
trim = TRUE,
position = position_dodge(width = 0.8)) +
geom_boxplot(width = 0.25,
position = position_dodge(width = 0.8),
outlier.shape = NA) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Coefficient of Variation", fill = "Replicate", subtitle = "Within Replicate Batch") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
pdf("MS1_CV_replicate_transparent.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_violin(scale = "width",
width = 0.75,
trim = TRUE,
position = position_dodge(width = 0.8)) +
geom_boxplot(width = 0.25,
position = position_dodge(width = 0.8),
outlier.shape = NA) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Coefficient of Variation", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80")) +
theme(plot.background = element_rect(fill = "transparent", colour = NA), # transparent background
panel.background = element_rect(fill = "transparent", colour = NA), # transparent panel
legend.background = element_rect(fill = "transparent", colour = NA), # transparent legend
legend.key = element_rect(fill = "transparent", colour = NA)) # transparent legend keys
dev.off()
# plot by replicate, standard amount, ptm
pdf("MS1_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "Coefficient of Variation", fill = "Replicate", subtitle = "Within Replicate Batch") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
# Chunk 30
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/unnormalized")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/unnormalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# summarize for each ptm in each replicate
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(mean = mean(value, na.rm = TRUE)) %>%
group_by(ptm, multiplier) %>%
summarize(CV = sd(mean, na.rm = TRUE)/mean(mean, na.rm = TRUE))
write.csv(df.cv, "MS1_CV.csv", row.names = FALSE)
# plot by standard amount
pdf("MS1_CV_replicate.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_violin(scale = "width",
width = 0.75,
trim = TRUE,
position = position_dodge(width = 0.8)) +
geom_boxplot(width = 0.25,
position = position_dodge(width = 0.8),
outlier.shape = NA) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Coefficient of Variation", fill = "Replicate", subtitle = "Across Replicate Batches") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by standard amount, ptm
pdf("MS1_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "Coefficient of Variation") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
# Chunk 31
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/normalized")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/normalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# get CV for each ptm, replicate, standard amount
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(CV = sd(value, na.rm = TRUE)/mean(value, na.rm = TRUE)) %>%
filter(CV > 0)
write.csv(df.cv, "MS1.ratio.log1p.batchCorrect_CV.csv", row.names = FALSE)
# plot by replicate, standard amount
pdf("MS1.ratio.log1p_CV_replicate.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_violin(scale = "width",
width = 0.75,
trim = TRUE,
position = position_dodge(width = 0.8)) +
geom_boxplot(width = 0.25,
position = position_dodge(width = 0.8),
outlier.shape = NA) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Coefficient of Variation", fill = "Replicate", subtitle = "Within Replicate Batch") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
pdf("MS1.ratio.log1p_CV_replicate_transparent.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_violin(scale = "width",
width = 0.75,
trim = TRUE,
position = position_dodge(width = 0.8)) +
geom_boxplot(width = 0.25,
position = position_dodge(width = 0.8),
outlier.shape = NA) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Coefficient of Variation", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80")) +
theme(plot.background = element_rect(fill = "transparent", colour = NA), # transparent background
panel.background = element_rect(fill = "transparent", colour = NA), # transparent panel
legend.background = element_rect(fill = "transparent", colour = NA), # transparent legend
legend.key = element_rect(fill = "transparent", colour = NA)) # transparent legend keys
dev.off()
# plot by replicate, standard amount, ptm
pdf("MS1.ratio.log1p_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "Coefficient of Variation", fill = "Replicate", subtitle = "Within Replicate Batch") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/normalized")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/normalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# summarize for each ptm in each replicate
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(mean = mean(value, na.rm = TRUE)) %>%
group_by(ptm, multiplier) %>%
summarize(CV = sd(mean, na.rm = TRUE)/mean(mean, na.rm = TRUE))
write.csv(df.cv, "MS1_CV.csv", row.names = FALSE)
# plot by standard amount
pdf("MS1.ratio.log1p.batchCorrect_CV_replicate.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_violin(scale = "width",
width = 0.75,
trim = TRUE,
position = position_dodge(width = 0.8)) +
geom_boxplot(width = 0.25,
position = position_dodge(width = 0.8),
outlier.shape = NA) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Coefficient of Variation", fill = "Replicate", subtitle = "Across Replicate Batches") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by standard amount, ptm
pdf("MS1.ratio.log1p.batchCorrect_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "Coefficient of Variation") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/normalized")
# subset 10pg samples
obj.filter.ratio.multi.10pg <- obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]
# batch correction
assays(obj.filter.ratio.multi.10pg, withDimnames=FALSE)[["MS1.ratio.log1p.batchCorrect"]] <-
removeBatchEffect(assay(obj.filter.ratio.multi.10pg, "MS1.ratio.log1p"),
batch = obj.filter.ratio.multi.10pg$replicate)
# filter out unmodified
peptides <- rownames(obj.filter.ratio.multi.10pg)
peptides <- peptides[!(grepl("\\[un\\]", peptides) & !grepl("\\[(me|ac|me2|me3|su|hib)\\]", peptides))]
obj.filter.ratio.multi.10pg.no_unmod <- obj.filter.ratio.multi.10pg[rownames(obj.filter.ratio.multi.10pg) %in% peptides,]
# make the histone ptms readable
rownames(obj.filter.ratio.multi.10pg.no_unmod) <- ptm_readable_translation(rownames(obj.filter.ratio.multi.10pg.no_unmod))
# get cv
df <- assay(obj.filter.ratio.multi.10pg.no_unmod, "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
group_by(ptm) %>%
summarize(mean = mean(value, na.rm = TRUE),
mean.log2 = log2(mean),
cv = sd(value, na.rm = TRUE)/mean,
cv.squared = cv^2) %>%
merge(as.data.frame(rowData(obj.filter.ratio.multi.10pg.no_unmod)), by.x = "ptm", by.y = "row.names")
df$Protein.Name <- protein_readable_translation(df$Protein.Name)
# plot cv
df.plot <- df[order(df$cv, decreasing = TRUE),] # order
df.plot$ptm <- factor(df.plot$ptm,
levels = rev(df.plot$ptm))
pdf("MS1.ratio.log1p.batchCorrect_CV_peptide.pdf",
width = 7,
height = 7)
ggplot(df.plot, aes(x=ptm, y=cv, fill=Protein.Name)) +
geom_bar(stat="identity", width=0.95, position = position_dodge(width=1)) +
geom_text(aes(label=ptm), vjust=0.5, hjust = -0.05, angle=0, position=position_dodge(width=1), size = 3) +
coord_flip() +
theme_Publication() +
scale_fill_manual(values = protein_colors) +
labs(y = "Coefficient of Variation",
x = "Histone PTM",
fill = "Protein") +
theme(legend.position = "right",
legend.direction = "vertical",
legend.margin=margin(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())  +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
breaks = c(seq(0, 1.5, by = 0.25)),
limits = c(0, 1.1))
dev.off()
pdf("MS1.ratio.log1p.batchCorrect_CV_peptide_top_20.pdf",
width = 6,
height = 5)
ggplot(df.plot[1:20,], aes(x=ptm, y=cv, fill=Protein.Name)) +
geom_bar(stat="identity", width=0.95, position = position_dodge(width=1)) +
geom_text(aes(label=ptm), vjust=0.5, hjust = -0.05, angle=0, position=position_dodge(width=1), size = 3) +
coord_flip() +
theme_Publication() +
scale_fill_manual(values = protein_colors) +
labs(y = "Coefficient of Variation",
x = "Histone PTM",
fill = "Protein") +
theme(legend.position = "right",
legend.direction = "vertical",
legend.margin=margin(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
breaks = c(seq(0, 1.5, by = 0.25)),
limits = c(0, 1.1))
dev.off()
df.plot
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/normalized")
# subset 10pg samples
obj.filter.ratio.multi.10pg <- obj.filter.ratio.multi[["ptm.ratio"]][,obj.filter.ratio.multi$multiplier == 1]
# batch correction
assays(obj.filter.ratio.multi.10pg, withDimnames=FALSE)[["MS1.ratio.log1p.batchCorrect"]] <-
removeBatchEffect(assay(obj.filter.ratio.multi.10pg, "MS1.ratio.log1p"),
batch = obj.filter.ratio.multi.10pg$replicate)
# filter out unmodified
peptides <- rownames(obj.filter.ratio.multi.10pg)
peptides <- peptides[!(grepl("\\[un\\]", peptides) & !grepl("\\[(me|ac|me2|me3|su|hib)\\]", peptides))]
obj.filter.ratio.multi.10pg.no_unmod <- obj.filter.ratio.multi.10pg[rownames(obj.filter.ratio.multi.10pg) %in% peptides,]
# make the histone ptms readable
rownames(obj.filter.ratio.multi.10pg.no_unmod) <- ptm_readable_translation(rownames(obj.filter.ratio.multi.10pg.no_unmod))
# get cv
df <- assay(obj.filter.ratio.multi.10pg.no_unmod, "MS1.ratio.log1p.batchCorrect") %>%
as.data.frame() %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
group_by(ptm) %>%
summarize(mean = mean(value, na.rm = TRUE),
mean.log2 = log2(mean),
cv = sd(value, na.rm = TRUE)/mean,
cv.squared = cv^2) %>%
merge(as.data.frame(rowData(obj.filter.ratio.multi.10pg.no_unmod)), by.x = "ptm", by.y = "row.names")
df$Protein.Name <- protein_readable_translation(df$Protein.Name)
# plot cv
df.plot <- df[order(df$cv, decreasing = TRUE),] # order
df.plot$ptm <- factor(df.plot$ptm,
levels = rev(df.plot$ptm))
pdf("MS1.ratio.log1p.batchCorrect_CV_peptide.pdf",
width = 7,
height = 7)
ggplot(df.plot, aes(x=ptm, y=cv, fill=Protein.Name)) +
geom_bar(stat="identity", width=0.95, position = position_dodge(width=1)) +
geom_text(aes(label=ptm), vjust=0.5, hjust = -0.05, angle=0, position=position_dodge(width=1), size = 3) +
coord_flip() +
theme_Publication() +
scale_fill_manual(values = protein_colors) +
labs(y = "Coefficient of Variation",
x = "Histone PTM",
fill = "Protein") +
theme(legend.position = "right",
legend.direction = "vertical",
legend.margin=margin(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())  +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
breaks = c(seq(0, 1.5, by = 0.25)),
limits = c(0, 1))
dev.off()
pdf("MS1.ratio.log1p.batchCorrect_CV_peptide_top_20.pdf",
width = 6,
height = 5)
ggplot(df.plot[1:20,], aes(x=ptm, y=cv, fill=Protein.Name)) +
geom_bar(stat="identity", width=0.95, position = position_dodge(width=1)) +
geom_text(aes(label=ptm), vjust=0.5, hjust = -0.05, angle=0, position=position_dodge(width=1), size = 3) +
coord_flip() +
theme_Publication() +
scale_fill_manual(values = protein_colors) +
labs(y = "Coefficient of Variation",
x = "Histone PTM",
fill = "Protein") +
theme(legend.position = "right",
legend.direction = "vertical",
legend.margin=margin(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
breaks = c(seq(0, 1.5, by = 0.25)),
limits = c(0, 1))
dev.off()
