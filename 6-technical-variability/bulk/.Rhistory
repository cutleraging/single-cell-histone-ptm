width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "MS1 instensity CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot byreplicate, standard amount, ptm
pdf("MS1_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "MS1 instensity CV", fill = "Replicate") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/unnormalized")
# merge with meta data
df <- assay(obj.filter, "MS2") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
# get CV for each ptm, replicate, standard amount
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(CV = sd(value, na.rm = TRUE)/mean(value, na.rm = TRUE))
write.csv(df.cv, "MS2_CV.csv", row.names = FALSE)
# plot by replicate, standard amount
pdf("MS2_CV_replicate.pdf",
width = 7,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "MS2 instensity CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by replicate, standard amount, ptm
pdf("MS2_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "MS2 intensity CV", fill = "Replicate") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/unnormalized")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/unnormalized")
# merge with meta data
df <- assay(obj.filter, "MS1") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
# summarize for each ptm in each replicate
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(mean = mean(value, na.rm = TRUE)) %>%
group_by(ptm, multiplier) %>%
summarize(CV = sd(mean, na.rm = TRUE)/mean(mean, na.rm = TRUE))
write.csv(df.cv, "MS1_CV.csv", row.names = FALSE)
# plot by standard amount
pdf("MS1_CV_replicate.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_boxplot() +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "MS1 instensity CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by standard amount, ptm
pdf("MS1_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "MS1 intensity CV") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/unnormalized")
# merge with meta data
df <- assay(obj.filter, "MS2") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
# summarize for each ptm in each replicate
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(mean = mean(value, na.rm = TRUE)) %>%
group_by(ptm, multiplier) %>%
summarize(CV = sd(mean, na.rm = TRUE)/mean(mean, na.rm = TRUE))
write.csv(df.cv, "MS2_CV.csv", row.names = FALSE)
# plot by standard amount
pdf("MS2_CV_replicate.pdf",
width = 4,
height = 4)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_boxplot() +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "MS2 instensity CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by standard amount, ptm
pdf("MS2_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "MS2 intensity CV") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
obj.filter.ratio.multi[["ptm.ratio"]]
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/normalized")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/normalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# get CV for each ptm, replicate, standard amount
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(CV = sd(value, na.rm = TRUE)/mean(value, na.rm = TRUE))
write.csv(df.cv, "MS1_CV.csv", row.names = FALSE)
# plot by replicate, standard amount
pdf("MS1_CV_replicate.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Histone Peptide Ratio CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
pdf("MS1_CV_replicate_transparent.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Histone Peptide Ratio CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80")) +
theme(plot.background = element_rect(fill = "transparent", colour = NA), # transparent background
panel.background = element_rect(fill = "transparent", colour = NA), # transparent panel
legend.background = element_rect(fill = "transparent", colour = NA), # transparent legend
legend.key = element_rect(fill = "transparent", colour = NA)) # transparent legend keys
dev.off()
# plot by replicate, standard amount, ptm
pdf("MS1_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "Histone Peptide Ratio CV", fill = "Replicate") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/within_replicate/normalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS2.ratio") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# get CV for each ptm, replicate, standard amount
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(CV = sd(value, na.rm = TRUE)/mean(value, na.rm = TRUE))
write.csv(df.cv, "MS2_CV.csv", row.names = FALSE)
# plot by replicate, standard amount
pdf("MS2_CV_replicate.pdf",
width = 7,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "MS2 peptide ratio CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by replicate, standard amount, ptm
pdf("MS2_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV, fill = as.factor(replicate))) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "MS2 peptide ratio CV", fill = "Replicate") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/normalized")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/normalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS1.ratio") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# summarize for each ptm in each replicate
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(mean = mean(value, na.rm = TRUE)) %>%
group_by(ptm, multiplier) %>%
summarize(CV = sd(mean, na.rm = TRUE)/mean(mean, na.rm = TRUE))
write.csv(df.cv, "MS1_CV.csv", row.names = FALSE)
# plot by standard amount
pdf("MS1_CV_replicate.pdf",
width = 5,
height = 5)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_boxplot() +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "Histone Peptide Ratio CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by standard amount, ptm
pdf("MS1_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "Histone Peptide Ratio CV") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/across_replicate/normalized")
# merge with meta data
df <- assay(obj.filter.ratio.multi[["ptm.ratio"]], "MS2.ratio") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names")
# summarize for each ptm in each replicate
df.cv <- df %>%
group_by(ptm, replicate, multiplier) %>%
summarize(mean = mean(value, na.rm = TRUE)) %>%
group_by(ptm, multiplier) %>%
summarize(CV = sd(mean, na.rm = TRUE)/mean(mean, na.rm = TRUE))
write.csv(df.cv, "MS2_CV.csv", row.names = FALSE)
# plot by standard amount
pdf("MS2_CV_replicate.pdf",
width = 4,
height = 4)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_boxplot() +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1.5, by = 0.25))) +
labs(title = "", x = "Histone Standard (pg)", y = "MS2 peptide ratio CV", fill = "Replicate") +
scale_x_discrete(labels = c("10", "20", "40", "80"))
dev.off()
# plot by standard amount, ptm
pdf("MS2_CV_ptm.pdf",
width = 25,
height = 25)
ggplot(subset(df.cv, multiplier %in% c(1,2,4,8)), aes(x = as.factor(multiplier), y = CV)) +
geom_bar(stat = "identity", position=position_dodge()) +
theme_Publication(base_size = 12) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Histone Standard (pg*10)", y = "MS2 peptide ratio CV") +
facet_wrap(.~ptm, scales = "free", labeller = labeller(ptm = label_wrap_gen(20)))
dev.off()
bottomup.filter <- subset(bottomup, Peptide.Note.New %in% rownames(obj.filter.ratio))
dialowres.filter <- subset(dialowres, Peptide.Note.New %in% rownames(obj.filter.ratio))
bottomup
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/1-data/bulk/simone")
# load
bottomup <- read.csv("Bottom-up vs middle-down (Anal Chem 2015) - cleaned data.csv", header = TRUE)
dialowres <- read.csv("DIA low resolution (Anal Chem 2015) - cleaned data.csv", header = TRUE)
met.labeling <- read.csv("Metabolic labeling (Sci Rep 2019) - cleaned data.csv")
# Convert peptide note format
bottomup <- bottomup %>%
mutate(Peptide.Note.New = sapply(Peptide.Note, format_peptide_note),
Peptide.Note.New = paste(Protein, Peptide.Note.New, sep = "-"))
dialowres <- dialowres %>%
mutate(Peptide.Note.New = sapply(Peptide.Note, format_peptide_note),
Peptide.Note.New = paste(Protein, Peptide.Note.New, sep = "-"))
met.labeling <- met.labeling %>%
mutate(Peptide.Note.New = sapply(Peptide.Note, format_peptide_note),
Peptide.Note.New = paste(Protein, Peptide.Note.New, sep = "-"))
met.labeling
bottomup
dialowres
met.labeling.filter <- subset(met.labeling, Peptide.Note.New %in% rownames(obj.filter.ratio))
met.labeling.filter
met.labeling
rownames(obj.filter.ratio)
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/1-data/bulk/simone")
# load
bottomup <- read.csv("Bottom-up vs middle-down (Anal Chem 2015) - cleaned data.csv", header = TRUE)
dialowres <- read.csv("DIA low resolution (Anal Chem 2015) - cleaned data.csv", header = TRUE)
met.labeling <- read.csv("Metabolic labeling (Sci Rep 2019) - cleaned data.csv")
# Convert peptide note format
bottomup <- bottomup %>%
mutate(Peptide.Note.New = sapply(Peptide.Note, format_peptide_note),
Peptide.Note.New = paste(Protein, Peptide.Note.New, sep = "-"))
dialowres <- dialowres %>%
mutate(Peptide.Note.New = sapply(Peptide.Note, format_peptide_note),
Peptide.Note.New = paste(Protein, Peptide.Note.New, sep = "-"))
met.labeling <- met.labeling %>%
mutate(Peptide.Note.New = sapply(Peptide.Note, format_peptide_note),
Peptide.Note.New = paste(Protein, Peptide.Note.New, sep = "-"))
bottomup.filter <- subset(bottomup, Peptide.Note.New %in% rownames(obj.filter.ratio))
dialowres.filter <- subset(dialowres, Peptide.Note.New %in% rownames(obj.filter.ratio))
met.labeling.filter <- subset(met.labeling, Peptide.Note.New %in% rownames(obj.filter.ratio))
met.labeling.filter
met.labeling.filter
dir.create("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/bulk")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/6-technical-variability/auto/bulk")
calculate_cv <- function(x) {
sd(x, na.rm = TRUE) / mean(x, na.rm = TRUE)
}
sc.cv <- assay(obj.filter.ratio, "MS1.ratio") %>%
rownames_to_column("ptm") %>%
pivot_longer(
cols = -ptm, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter.ratio)), by.x = "variable", by.y = "row.names") %>%
filter(multiplier == 1) %>%
group_by(ptm, replicate) %>%
summarize(CV = sd(value, na.rm = TRUE)/mean(value, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ptm) %>%
summarize(mean = mean(CV, na.rm = TRUE)) %>%
filter(ptm %in% c(bottomup.filter$Peptide.Note.New, dialowres.filter$Peptide.Note.New))
# filter based on peptides in histone standard
bottomup.filter <- subset(bottomup, Peptide.Note.New %in% rownames(obj.filter.ratio))
bottomup.filter$cv <- apply(bottomup.filter[,grepl("BU", colnames(bottomup.filter))], 1, calculate_cv)
# filter based on peptides in histone standard
dialowres.filter <- subset(dialowres, Peptide.Note.New %in% rownames(obj.filter.ratio))
dialowres.filter$cv <- apply(dialowres.filter[,grepl("hela", colnames(dialowres.filter))], 1, calculate_cv)
# filter based on peptides in histone standard
met.labeling.filter <- subset(met.labeling, Peptide.Note.New %in% rownames(obj.filter.ratio))
met.labeling.filter$cv <- apply(met.labeling.filter[,grepl("tcell", colnames(met.labeling.filter))], 1, calculate_cv)
# combine sc and bulk
na.pad <- function(x,len){
x[1:len]
}
makePaddedDataFrame <- function(l,...){
maxlen <- max(sapply(l,length))
data.frame(lapply(l,na.pad,len=maxlen),...)
}
df <- makePaddedDataFrame(list(sc = sc.cv$mean,
bottomup = bottomup.filter$cv,
dialowres = dialowres.filter$cv,
met.labeling = met.labeling.filter$cv))
# plot
pdf("MS1_CV_technical_reps.pdf",
width = 4,
height = 4.5)
ggplot(melt(df), aes(x = variable, y = value, fill = variable)) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1, by = 0.1))) +
labs(y = "Histone Peptide Ratio CV", fill = "Studies") +
# scale_fill_manual(labels = c("10 pg histone standard", "Bulk Sidoli et al., (2015) A", "Bulk Sidoli et al., (2015) B"),
#                     values = c("forestgreen", "slateblue", "dodgerblue")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "top",
legend.direction = "vertical", # Ensure legend items are stacked vertically
legend.justification = "left",
legend.box.just = "left",
legend.title = element_text(size = 12),
legend.text = element_text(size = 12))
dev.off()
# combine sc and bulk
na.pad <- function(x,len){
x[1:len]
}
makePaddedDataFrame <- function(l,...){
maxlen <- max(sapply(l,length))
data.frame(lapply(l,na.pad,len=maxlen),...)
}
df <- makePaddedDataFrame(list(sc = sc.cv$mean,
bottomup = bottomup.filter$cv,
dialowres = dialowres.filter$cv,
met.labeling = met.labeling.filter$cv))
# plot
pdf("MS1_CV_technical_reps.pdf",
width = 4,
height = 4.5)
ggplot(melt(df), aes(x = variable, y = value, fill = variable)) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1, by = 0.1))) +
labs(y = "Histone Peptide Ratio CV", fill = "Studies") +
# scale_fill_manual(labels = c("10 pg histone standard", "Bulk Sidoli et al., (2015) A", "Bulk Sidoli et al., (2015) B"),
#                     values = c("forestgreen", "slateblue", "dodgerblue")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "top",
legend.direction = "vertical", # Ensure legend items are stacked vertically
legend.justification = "left",
legend.box.just = "left",
legend.title = element_text(size = 12),
legend.text = element_text(size = 12))
dev.off()
# combine sc and bulk
na.pad <- function(x,len){
x[1:len]
}
makePaddedDataFrame <- function(l,...){
maxlen <- max(sapply(l,length))
data.frame(lapply(l,na.pad,len=maxlen),...)
}
df <- makePaddedDataFrame(list(sc = sc.cv$mean,
bottomup = bottomup.filter$cv,
dialowres = dialowres.filter$cv,
met.labeling = met.labeling.filter$cv))
# plot
pdf("MS1_CV_technical_reps.pdf",
width = 4,
height = 4.5)
ggplot(melt(df), aes(x = variable, y = value, fill = variable)) +
geom_boxplot(width = 0.5, position = position_dodge(width = 0.6)) +
theme_Publication() +
#scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(seq(0, 1, by = 0.1))) +
labs(y = "Histone Peptide Ratio CV", fill = "Studies") +
# scale_fill_manual(labels = c("10 pg histone standard", "Bulk Sidoli et al., (2015) A", "Bulk Sidoli et al., (2015) B"),
#                     values = c("forestgreen", "slateblue", "dodgerblue")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "top",
legend.direction = "vertical", # Ensure legend items are stacked vertically
legend.justification = "left",
legend.box.just = "left",
legend.title = element_text(size = 12),
legend.text = element_text(size = 12))
dev.off()
df <- read.delim("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/1-data/bulk/malvina/LINCS_GCP_Plate58_A549_annotated_minimized_2018-01-02_14-26-56_LVL3.gct", skip=2)
# extract meta data
meta <- df[c(1:21),-c(2:12)]
rownames(meta) <- meta$id
meta$id <- NULL
meta <- t(meta)
meta <- as.data.frame(meta)
# get abundance data into format
data <- df[-c(1:21),]
data
meta
met.labeling
head(df)
head(data)
# extract histone peptide info
df.info <- df[,c("pr_gene_symbol", "pr_gcp_base_peptide", "pr_gcp_histone_mark")]
df.info
# extract histone peptide info
df.info <- df[-c(1:21), c("pr_gene_symbol", "pr_gcp_base_peptide", "pr_gcp_histone_mark")]
df.info
data <- df[-c(1:21),]
data
# data is normalized as: Light(PTM)/Heavy(PTM) divided by Light(NORM)/Heavy(NORM)
# A1/A2/A3 is DMSO controls, which is what we want to use to calculate CV
df <- read.delim("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/1-data/bulk/malvina/LINCS_GCP_Plate58_A549_annotated_minimized_2018-01-02_14-26-56_LVL3.gct", skip=2)
# extract
data <- df[-c(1:21), c("pr_gene_symbol", "pr_gcp_base_peptide", "pr_gcp_histone_mark", # histone peptide info
"A01_acq_01",  "A02_acq_01",   "A03_acq_01",)] # samples
# extract
data <- df[-c(1:21), c("pr_gene_symbol", "pr_gcp_base_peptide", "pr_gcp_histone_mark", # histone peptide info
"A01_acq_01",  "A02_acq_01",   "A03_acq_01")] # samples
head(data)
head(met.labeling)
data$pr_gcp_histone_mark
