height = 5)
ggplot(df, aes(x = Replicate, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_Publication() +
labs(title = "Samples per replicate", x = "Replicate", y = "Frequency") +
scale_y_continuous(labels = scales::number_format(accuracy = 1))
dev.off()
# by amount of cells
df <- as.data.frame(table(obj.filter$multiplier))
names(df) <- c("Replicate", "Count")
pdf("samples_per_cells.pdf",
width = 5,
height = 5)
ggplot(df, aes(x = Replicate, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_Publication() +
labs(title = "Samples per multiplier", x = "Cell #", y = "Frequency") +
scale_y_continuous(labels = scales::number_format(accuracy = 1))
dev.off()
# Chunk 7
# peptides per sample
df <- as.data.frame(colSums(!is.na(assay(obj.filter, "MS1")))) %>%
rownames_to_column()
names(df) <- c("sample", "count")
df$sample <- factor(df$sample)
pdf("MS1_precursors_per_sample.pdf",
width = 5,
height = 10)
ggplot(df, aes(x = sample, y = count)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_Publication() +
labs(title = "Number of peptides\ndetected per sample", x = "# Peptides", y = "Sample")
dev.off()
# missing values
df <- log2(assay(obj.filter, "MS1"))
for (col_name in names(df)) {
df[[col_name]][is.infinite(df[[col_name]])] <- NA
}
pdf("MS1_missing_values.pdf",
width = 5,
height = 5)
set.seed(123)
pheatmap(df,
annotation_col = as.data.frame(colData(obj.filter)[,c("replicate", "multiplier")]),
scale = "none",
na_col = "black",
show_rownames = FALSE,
show_colnames = FALSE,
cluster_rows = FALSE,
cluster_cols = FALSE)
dev.off()
# Chunk 8
# peptides per sample
df <- as.data.frame(colSums(!is.na(assay(obj.filter, "MS2")))) %>%
rownames_to_column()
names(df) <- c("sample", "count")
df$sample <- factor(df$sample)
pdf("MS2_precursors_per_sample.pdf",
width = 5,
height = 10)
ggplot(df, aes(x = sample, y = count)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_Publication() +
labs(title = "Number of peptides\ndetected per sample", x = "# Peptides", y = "Sample")
dev.off()
# missing values
df <- log2(assay(obj.filter, "MS2"))
for (col_name in names(df)) {
df[[col_name]][is.infinite(df[[col_name]])] <- NA
}
pdf("MS2_missing_values.pdf",
width = 5,
height = 5)
set.seed(123)
pheatmap(df,
annotation_col = as.data.frame(colData(obj.filter)[,c("replicate", "multiplier")]),
scale = "none",
na_col = "black",
show_rownames = FALSE,
show_colnames = FALSE,
cluster_rows = FALSE,
cluster_cols = FALSE)
dev.off()
# Chunk 9
# by cell
df <- assay(obj.filter, "MS1") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
pdf("MS1_distribution_cell.pdf",
width = 10,
height = 10)
ggplot(df, aes(x = as.factor(run_id), y = value, fill = as.factor(replicate))) +
geom_violin(width = 0.8) +
geom_boxplot(width = 0.2) +
scale_y_log10() +
theme_Publication() +
labs(title = "Cell #", x = "Run", y = "MS1 intensity", fill = "Replicate") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
facet_wrap(.~as.factor(multiplier), scales = "free", nrow = 3)
dev.off()
# by replicate
df <- assay(obj.filter, "MS1") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
pdf("MS1_distribution_replicate.pdf",
width = 5,
height = 5)
ggplot(df, aes(x = value, fill = as.factor(replicate))) +
geom_density(alpha = 0.5) +
scale_x_log10() +
theme_Publication() +
labs(title = "", x = "MS1 intensity", y = "Density", fill = "Replicate")
dev.off()
# by histone cells amount and replicate
df <- merge(melt(assay(obj.filter, "MS1")), as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
pdf("MS1_distribution_multiplier.pdf",
width = 7,
height = 5)
ggplot(df, aes(x = as.factor(multiplier), y = value, fill = as.factor(replicate))) +
geom_boxplot(width = 0.5, outlier.shape = NA, position = position_dodge(width = 0.6)) +
scale_y_log10() +
theme_Publication() +
labs(title = "", x = "Cell #", y = "MS1 intensity", fill = "Replicate")
dev.off()
# Chunk 10
# by cell
df <- assay(obj.filter, "MS2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
pdf("MS2_distribution_cell.pdf",
width = 10,
height = 10)
ggplot(df, aes(x = as.factor(run_id), y = value, fill = as.factor(replicate))) +
geom_violin(width = 0.8) +
geom_boxplot(width = 0.2) +
scale_y_log10() +
theme_Publication() +
labs(title = "Cell #", x = "Run", y = "MS2 intensity", fill = "Replicate") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
facet_wrap(.~as.factor(multiplier), scales = "free", nrow = 3)
dev.off()
# by replicate
df <- assay(obj.filter, "MS2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
pdf("MS2_distribution.pdf",
width = 5,
height = 5)
ggplot(df, aes(x = value, fill = as.factor(replicate))) +
geom_density(alpha = 0.5) +
#geom_histogram(alpha = 0.5) +
scale_x_log10() +
theme_Publication() +
labs(title = "", x = "MS2 intensity", y = "Density", fill = "Replicate")
dev.off()
# by histone cells amount and replicate
df <- merge(melt(assay(obj.filter, "MS2")), as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
pdf("MS2_distribution_cells.pdf",
width = 7,
height = 5)
ggplot(df, aes(x = as.factor(multiplier), y = value, fill = as.factor(replicate))) +
geom_boxplot(width = 0.5, outlier.shape = NA, position = position_dodge(width = 0.6)) +
scale_y_log10() +
theme_Publication() +
labs(title = "", x = "Cell #", y = "MS2 intensity", fill = "Replicate")
dev.off()
# Chunk 11
df <- assay(obj.filter, "RT") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names")
pdf("peptide_retention_times_cells.pdf",
width = 10,
height = 10)
ggplot(df, aes(x = id, y = value, color = as.factor(multiplier))) +
geom_jitter(alpha = 0.75) +
theme_Publication() +
labs(title = "", x = "Peptide", y = "Retention time (min)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10),
legend.position = "bottom") +
scale_color_discrete(name = "Cell #")
dev.off()
pdf("peptide_retention_times_replicate.pdf",
width = 10,
height = 10)
ggplot(df, aes(x = id, y = value, color = as.factor(replicate))) +
geom_jitter(alpha = 0.75) +
theme_Publication() +
labs(title = "", x = "Peptide", y = "Retention time (min)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10),
legend.position = "bottom") +
scale_color_discrete(name = "Replicate")
dev.off()
# single cells only
pdf("peptide_retention_times_1cell.pdf",
width = 6,
height = 15)
ggplot(subset(df, multiplier == "1"), aes(x = id, y = value, color = as.factor(replicate))) +
geom_jitter(alpha = 0.75) +
coord_flip() +
theme_Publication() +
labs(title = "", x = "Peptide", y = "Retention time (min)") +
theme(legend.position = "bottom") +
scale_color_discrete(name = "Replicate")
dev.off()
# Chunk 12
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Sidoli-lab/Projects/Single-cell-histone/Analysis/3-calibration-curves/auto/cells/filtered")
# all replicates
df <- assay(obj.filter, "MS1") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names") %>%
filter(multiplier != 100)
df$id <- gsub(";", " ", df$id)
pdf("MS1_calibration_curve_all.pdf",
width = 25,
height = 25)
ggplot(df, aes(x = as.numeric(as.character(multiplier)), y = value, color = as.factor(replicate))) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Cell #", y = "MS1 intensity") +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# replicate 1
pdf("MS1_calibration_curve_replicate_1.pdf",
width = 25,
height = 25)
ggplot(subset(df, replicate == 1), aes(x = as.numeric(as.character(multiplier)), y = value)) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS1 intensity") +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# replicate 2
pdf("MS1_calibration_curve_replicate_2.pdf",
width = 25,
height = 25)
ggplot(subset(df, replicate == 2), aes(x = as.numeric(as.character(multiplier)), y = value)) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS1 intensity") +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# replicate 4 (labeld as 3)
pdf("MS1_calibration_curve_replicate_4.pdf",
width = 25,
height = 25)
ggplot(subset(df, replicate == 3), aes(x = as.numeric(as.character(multiplier)), y = value)) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS1 intensity") +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# distribution of R values
df$multiplier <- as.numeric(as.character(df$multiplier))
df.R <- df %>%
group_by(id, replicate) %>%
summarise(
correlation = if(sum(!is.na(value) & !is.na(multiplier) & is.finite(value) & is.finite(multiplier)) > 1)
cor.test(value, multiplier, use = "complete.obs")$estimate
else NA,
p_value = if(sum(!is.na(value) & !is.na(multiplier) & is.finite(value) & is.finite(multiplier)) > 1)
cor.test(value, multiplier, use = "complete.obs")$p.value
else NA,
.groups = "drop"  # Drops the grouping structure from the result
)
pdf("MS1_calibration_curve_correlations.pdf",
width = 4,
height = 3.5)
violin_plot <- ggplot(df.R, aes(x = as.factor(replicate), y = correlation, fill = as.factor(replicate))) +
geom_violin(outlier.shape = NA) +
geom_jitter(aes(color = p_value), alpha = 0.6) +
geom_hline(yintercept = 0.8, linetype='dashed') +
scale_color_gradient(low = "black", high = "white", labels = label_number(accuracy = 0.01)) +
guides(fill = FALSE) +
theme_Publication(base_size = 12) +
theme(legend.position = "top") +
labs(x = "Replicate", y = "Pearson R", color = "p-value") +
theme(legend.text = element_text(size = 10),
legend.key.size = unit(0.5, 'cm'))
histogram_plot <- ggplot(df.R, aes(x = correlation, fill = as.factor(replicate))) +
geom_histogram(position = "dodge", binwidth = 0.1, alpha = 1) + # Adjust binwidth as needed
coord_flip() + # Flip the axes to make the histogram vertical
theme_void() +
guides(fill = FALSE)
# Align the plots side by side
plot_grid(violin_plot, histogram_plot, axis = "tb", align = 'hv', ncol = 2, rel_widths = c(2, 1))
dev.off()
# output distribution to be used for filtering downstream
write.csv(df.R, "MS1_calibration_curve_correlations.csv", row.names = FALSE)
# Chunk 13
# all replicates
df <- assay(obj.filter, "MS1") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names") %>%
filter(multiplier != 100)
df$id <- gsub(";", " ", df$id)
# subset peptides
rep_peptides <- c("H2A1B-K13[un] K15[ac]", "H31-K9[me2] K14[un]","H31-K18[un] K23[ac]", "H4-K5[ac] K8[un] K12[ac] K16[un]")
facet_labels <- c("H2AK15Ac", "H3K9Me2", "H3K23Ac", "H4K5AcK12Ac")
names(facet_labels) <- rep_peptides
df <- subset(df, id %in% rep_peptides)
pdf("MS1_calibration_curve_representative.pdf",
width = 7,
height = 3.5)
ggplot(df, aes(x = as.numeric(as.character(multiplier)), y = value, color = as.factor(replicate))) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor(size = 2) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Cell #", y = "MS1 Intensity") +
facet_wrap(.~id, scales = "free", nrow = 1, labeller = labeller(id = facet_labels)) +
theme_Publication(base_size = 12) +
scale_x_continuous(breaks = c(0,1,2,4,8)) +
theme(legend.position = "top") +
guides(color = guide_legend(
override.aes=list(shape = 19)))
dev.off()
# Chunk 14
# all replicates
df <- assay(obj.filter, "MS2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names") %>%
filter(multiplier != 100)
df$id <- gsub(";", " ", df$id)
pdf("MS2_calibration_curve_all.pdf",
width = 25,
height = 25)
ggplot(df, aes(x = as.numeric(as.character(multiplier)), y = value, color = as.factor(replicate))) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS2 intensity") +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# replicate 1
pdf("MS2_calibration_curve_replicate_1.pdf",
width = 25,
height = 25)
ggplot(subset(df, replicate == 1), aes(x = as.numeric(as.character(multiplier)), y = value)) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS2 intensity") +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# replicate 2
pdf("MS2_calibration_curve_replicate_2.pdf",
width = 25,
height = 25)
ggplot(subset(df, replicate == 2), aes(x = as.numeric(as.character(multiplier)), y = value)) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS2 intensity") +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# replicate 4
pdf("MS2_calibration_curve_replicate_4.pdf",
width = 25,
height = 25)
ggplot(subset(df, replicate == 3), aes(x = as.numeric(as.character(multiplier)), y = value)) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor() +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
facet_wrap(.~id, scales = "free", labeller = labeller(id = label_wrap_gen(20))) +
theme_Publication(base_size = 12) +
labs(title = "", x = "Cell #", y = "MS2 intensity") +
scale_x_continuous(breaks = c(0,1,2,4,8))
dev.off()
# distribution of R values
df$multiplier <- as.numeric(as.character(df$multiplier))
df.R <- df %>%
group_by(id, replicate) %>%
summarise(
correlation = if(sum(!is.na(value) & !is.na(multiplier) & is.finite(value) & is.finite(multiplier)) > 1)
cor.test(value, multiplier, use = "complete.obs")$estimate
else NA,
p_value = if(sum(!is.na(value) & !is.na(multiplier) & is.finite(value) & is.finite(multiplier)) > 1)
cor.test(value, multiplier, use = "complete.obs")$p.value
else NA,
.groups = "drop"  # Drops the grouping structure from the result
)
pdf("MS2_calibration_curve_correlations.pdf",
width = 3,
height = 3.5)
ggplot(df.R, aes(x = as.factor(replicate), y = correlation, fill = as.factor(replicate))) +
geom_violin(outlier.shape = NA) +
geom_jitter(aes(color = p_value), alpha = 0.6) +
geom_hline(yintercept = 0.8, linetype='dashed') +
scale_color_gradient(low = "black", high = "white") +
guides(fill = FALSE) +
theme_Publication(base_size = 12) +
theme(legend.position = "top") +
labs(x = "Replicate", y = "Pearson R", color = "p-value") +
theme(legend.text = element_text(size = 10),
legend.key.size = unit(0.5, 'cm'))
dev.off()
# output distribution to be used for filtering downstream
write.csv(df.R, "MS2_calibration_curve_correlations.csv", row.names = FALSE)
# Chunk 15
# all replicates
df <- assay(obj.filter, "MS2") %>%
rownames_to_column("id") %>%
pivot_longer(
cols = -id, # This keeps the 'id' column fixed
names_to = "variable",
values_to = "value") %>%
merge(as.data.frame(colData(obj.filter)), by.x = "variable", by.y = "row.names") %>%
filter(multiplier != 100)
df$id <- gsub(";", " ", df$id)
# subset peptides
rep_peptides <- c("H2A1B-K13[un] K15[ac]", "H31-K9[me2] K14[un]","H31-K18[un] K23[ac]", "H4-K5[ac] K8[un] K12[ac] K16[un]")
facet_labels <- c("H2AK15ac", "H3K9me2", "H3K23ac", "H4K5acK12ac")
names(facet_labels) <- rep_peptides
df <- subset(df, id %in% rep_peptides)
pdf("MS2_calibration_curve_representative.pdf",
width = 7,
height = 3.5)
ggplot(df, aes(x = as.numeric(as.character(multiplier)), y = value, color = as.factor(replicate))) +
geom_point() +
stat_smooth(method = "lm") +
stat_cor(size = 2) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
scale_color_discrete(name = "Replicate") +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(title = "", x = "Cell #", y = "MS2 Intensity") +
facet_wrap(.~id, scales = "free", nrow = 1, labeller = labeller(id = facet_labels)) +
theme_Publication(base_size = 12) +
scale_x_continuous(breaks = c(0,1,2,4,8)) +
theme(legend.position = "top") +
guides(color = guide_legend(
override.aes=list(shape = 19)))
dev.off()
